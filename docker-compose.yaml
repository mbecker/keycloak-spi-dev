version: "3.4"

services:
  postgres:
    image: "postgres:alpine"
    container_name: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: "always"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
    networks:
      - keycloak
  keycloakx:
    image: keycloakx-dev:17.0.0
    container_name: keycloakx
    build: # "context" and "dockerfile" fields have to be under "build"
      context: ./dev
      network: host
      dockerfile: .Dockerfile
      cache_from:
        - quay.io/keycloak/keycloak:17.0.0
      # args:
      #   KC_DB: postgres
    environment:
      KC_HTTPS_CERTIFICATE_FILE: /etc/x509/https/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/x509/https/tls.key
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost:8443
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # KC_DB_URL: jdbc:postgresql://postgres/keycloak
      # KC_DB_USERNAME: keycloak
      # KC_DB_PASSWORD: password
      # KC_HOSTNAME: penguin.linux.test:8080
      # KC_HOSTNAME_STRICT: 'false'
      # KC_HTTP_ENABLED: 'true'
      # KC_HTTP_ENABLED: "true"
      # PROXY_ADDRESS_FORWARDING: "true"
    # command: start-dev 
    # --db=postgres -Dkc.db.url.host=postgres --db-username=keycloak --db-password=password
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./certs/localhost+3.pem:/etc/x509/https/tls.crt
      - ./certs/localhost+3-key.pem:/etc/x509/https/tls.key
    depends_on:
      - postgres
    networks:
      - keycloak
networks:
  keycloak:
    driver: bridge